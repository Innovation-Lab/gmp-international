@use "global" as *;

/* ------------------------------
 *
 * input[type="text"]
 * テキスト
 *
 ------------------------------ */
input:where(
    [type="text"],
    [type="number"],
    [type="tel"],
    [type="email"],
    [type="password"]
  ) {
  @include f-base();
  width: 100%;
  &.is-invalid {
    @include fi-right($fi-invalid, $fc-invalid);
    @include invalid();
  }
  &.f-lg {
    @include f-base(lg);
  }
  &.f-sm {
    @include f-base(sm);
  }
}
:where(select, input:where([type="date"], [type="time"])) {
  @include f-base();
  &.is-invalid {
    @include invalid();
  }
  &.f-lg {
    @include f-base(lg);
  }
  &.f-sm {
    @include f-base(sm);
  }
}
// number
input[type="number"] {
  font-variant-numeric: tabular-nums;
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}
/* ------------------------------
 *
 * input[type="date"]
 * 日付
 *
 ------------------------------ */
input[type="date"] {
  @include fi-right($fi-date);
  padding-block: calc(var(--fs-padding-block) - 1px);
  position: relative;
  &::-webkit-calendar-picker-indicator {
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0 auto auto 0;
    opacity: 0;
  }
}
/* ------------------------------
 *
 * input[type="time"]
 * 時間
 *
 ------------------------------ */
input[type="time"] {
  @include fi-right($fi-time);
  padding-block: calc(var(--fs-padding-block) - 1px);
  position: relative;
  &::-webkit-calendar-picker-indicator {
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0 auto auto 0;
    opacity: 0;
  }
}
/* ------------------------------
 *
 * input[type="file"]
 * ファイル
 *
 ------------------------------ */
input[type="file"] {
  opacity: 0;
  position: absolute;
  pointer-events: none;
  & + label {
    @include f-base();
    display: inline-block;
    min-width: max-content;
    cursor: pointer;
  }
}
/* ------------------------------
 *
 * select
 * セレクトボックス
 *
 ------------------------------ */
select {
  @include fi-right($fi-select);
  appearance: none;
  width: auto;
  cursor: pointer;
  &.is-invalid {
    @include fi-right($fi-select, $fc-icon, $fi-invalid, $fc-invalid);
  }
}
/* ------------------------------
 *
 * textarea
 * テキストエリア
 *
 ------------------------------ */
textarea {
  @include f-base();
  resize: none;
  height: 5.5rem;
  vertical-align: bottom;
  width: 100%;
  &.is-invalid {
    @include fi-right($fi-invalid, $fc-invalid);
    @include invalid();
  }
}
/* ------------------------------
 *
 * input[type="radio"]
 * ラジオボタン
 *
 ------------------------------ */
label {
  &:has(input[type="radio"]) {
    @include f-base();
    @include fi-left($fi-radio);
    width: auto;
    display: inline-block;
    min-height: calc(var(--fs-input) + 2px);
    padding-left: calc(var(--fs-font) * 2);
    user-select: none;
    cursor: pointer;
    border-color: transparent;
  }
  &:has(input[type="radio"]:checked) {
    @include fi-left($fi-radio-checked, $fc-accent);
  }
  &:has(input[type="radio"]) input {
    @include focusLabel;
    padding-right: 80px;
    appearance: none;
    -webkit-appearance: none;
    position: absolute;
    inset: 0 auto atto 0;
    opacity: 0;
    pointer-events: none;
  }
  // 無効
  &:has(input[type="radio"]).is-invalid {
    color: var(--fc-invalid);
    @include fi-left($fi-radio, $fc-invalid);
    background-color: var(--fc-invalid-bg);
  }
  &:has(input[type="radio"]:checked).is-invalid {
    color: var(--fc-text);
    @include fi-left($fi-radio-checked, $fc-accent);
    // background-color: transparent;
  }
  // ディスエイブルド
  &:has(input[type="radio"][disabled], input[type="radio"]:disabled) {
    color: var(--fc-disabled);
    @include fi-left($fi-radio, $fc-disabled);
    cursor: default;
  }
  &:has(
      input[type="radio"][disabled]:checked,
      input[type="radio"]:disabled:checked
    ) {
    color: var(--fc-disabled);
    @include fi-left($fi-radio-checked, $fc-disabled);
    cursor: default;
  }
}

/* ------------------------------
 *
 * input[type="checkbox"]
 * チェックボックス
 *
 ------------------------------ */
label {
  &:has(input[type="checkbox"]) {
    @include f-base();
    @include fi-left($fi-check);
    width: auto;
    display: inline-block;
    min-height: calc(var(--fs-input) + 2px);
    padding-left: calc(var(--fs-font) * 2);
    user-select: none;
    cursor: pointer;
    border-color: transparent;
    vertical-align: bottom;
  }
  &:has(input[type="checkbox"]:checked) {
    @include fi-left($fi-check-checked, $fc-accent);
  }
  &:has(input[type="checkbox"]) input {
    @include focusLabel;
    appearance: none;
    -webkit-appearance: none;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    pointer-events: none;
  }
  // 無効
  &:has(input[type="checkbox"]).is-invalid {
    color: var(--fc-invalid);
    @include fi-left($fi-check, $fc-invalid);
    background-color: var(--fc-invalid-bg);
  }
  &:has(input[type="checkbox"]:checked).is-invalid {
    color: var(--fc-text);
    @include fi-left($fi-check-checked, $fc-accent);
    // background-color: transparent;
  }
  // ディスエイブルド
  &:has(input[type="checkbox"][disabled], input[type="checkbox"]:disabled) {
    color: var(--fc-disabled);
    @include fi-left($fi-check, $fc-disabled);
    cursor: default;
  }
  &:has(
      input[type="checkbox"][disabled]:checked,
      input[type="checkbox"]:disabled:checked
    ) {
    color: var(--fc-disabled);
    @include fi-left($fi-check-checked, $fc-disabled);
    cursor: default;
  }
}
